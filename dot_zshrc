# Enable dotfile globbing
setopt glob_dots

# Initialize completions (optimized)
autoload -Uz compinit
if [[ -n ${ZDOTDIR}/.zcompdump(#qNmh+24) ]]; then
  compinit
else
  compinit -C
fi

# Source configuration files (NO paths.zsh - it should be deleted!)
for config in vars functions alias; do
  [[ -f "$HOME/.zsh/${config}.zsh" ]] && source "$HOME/.zsh/${config}.zsh"
done

# Source external tools
[[ -s "$BUN_INSTALL/_bun" ]] && source "$BUN_INSTALL/_bun"
[[ -s "/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh" ]] && \
  source "/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh"
[[ -s "$HOME/.deno/env" ]] && source "$HOME/.deno/env"

# Initialize interactive tools
eval "$(zoxide init zsh)"
eval "$(starship init zsh)"
[[ -f "$HOME/.hishtory/config.zsh" ]] && source "$HOME/.hishtory/config.zsh"

_zsh_autosuggest_strategy_hishtory() {
    local prefix="$1"
    typeset -g suggestion
    
    # Query hishtory for the most recent matching command
    suggestion=$(hishtory query "$prefix" 2>/dev/null | \
                 awk '{$1=$2=$3=$4=""; print $0}' | \
                 sed 's/^[[:space:]]*//' | \
                 grep -v "^$prefix$" | \
                 head -1)
}

# 2. Set the suggestion strategy (can use multiple strategies)
# Options: 
#   - Use only hishtory: ZSH_AUTOSUGGEST_STRATEGY=(hishtory)
#   - Use hishtory first, fall back to history: ZSH_AUTOSUGGEST_STRATEGY=(hishtory history)
#   - Use history first, then hishtory: ZSH_AUTOSUGGEST_STRATEGY=(history hishtory)
ZSH_AUTOSUGGEST_STRATEGY=(hishtory)

# 3. Optional: Configure other zsh-autosuggestions settings
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#666666"
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20

# Smart tab function
_smart_tab() {
    # If we're at the beginning of the line or only have whitespace
    if [[ -z "${LBUFFER// }" ]]; then
        # Call hishtory TUI
        zle _hishtory_widget
    else
        # Normal tab completion
        zle expand-or-complete
    fi
}

# Create the widget and bind it
zle -N _smart_tab
bindkey '^I' _smart_tab
# Hishtory config (only once!)
source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh
source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# Tmux auto-start (optimized)
# if [[ -z "$TMUX" ]] && [[ "$TERM_PROGRAM" != "vscode" ]] && [[ "$TERM" != "xterm-ghostty" ]]; then
#   if tmux has-session 2>/dev/null; then
#     # Attach to the existing session
#     # The original script was starting yazi instead of attaching.
#     # If you want to attach, use `tmux attach-session`.
#     # If you want the original behavior, you can revert to the `cd`, `clear`, `yazi` commands.
#     exec tmux attach-session
#   else
#     # Create a new session if none exists
#     exec tmux new-session
#   fi
# fi

# At the END of .zshrc (after starship init)
if command -v starship &> /dev/null; then
  function starship_bottom_prompt() {
    local rows=$(tput lines)
    print -Pn "\033[${rows};0H"
    starship prompt
  }
  export PROMPT='$(starship_bottom_prompt)'
fi

# Added by microsandbox installer
export PATH="$HOME/.local/bin:$PATH"
export DYLD_LIBRARY_PATH="$HOME/.local/lib:$DYLD_LIBRARY_PATH"
alias claude="/Users/prad/.claude/local/claude"

# OpenHands CLI aliases
alias openhands="uvx --python 3.12 --from openhands-ai openhands"
alias oh="uvx --python 3.12 --from openhands-ai openhands"
