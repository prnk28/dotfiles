# Docker Compose Services Management Functions
# Service-specific convenience functions that wrap the global taskfile services commands

# Convenience functions for OpenWebUI
function openwebui-start() {
  task -g services:start:openwebui
}

function openwebui-stop() {
  task -g services:stop:openwebui
}

function openwebui-restart() {
  task -g services:restart:openwebui
}

function openwebui-logs() {
  task -g services:logs:openwebui -- "$@"
}

function openwebui-mcps() {
  task -g services:mcps:openwebui
}

# Convenience functions for Flame
function flame-start() {
  task -g services:start:flame
}

function flame-stop() {
  task -g services:stop:flame
}

function flame-restart() {
  task -g services:restart:flame
}

function flame-logs() {
  task -g services:logs:flame -- "$@"
}

# Convenience functions for Owlistic
function owlistic-start() {
  task -g services:start:owlistic
}

function owlistic-stop() {
  task -g services:stop:owlistic
}

function owlistic-restart() {
  task -g services:restart:owlistic
}

function owlistic-logs() {
  task -g services:logs:owlistic -- "$@"
}

# Convenience functions for Graphiti MCP
function graphiti-mcp-start() {
  task -g services:start:graphiti-mcp
}

function graphiti-mcp-stop() {
  task -g services:stop:graphiti-mcp
}

function graphiti-mcp-restart() {
  task -g services:restart:graphiti-mcp
}

function graphiti-mcp-logs() {
  task -g services:logs:graphiti-mcp -- "$@"
}

# Convenience functions for n8n
function n8n-start() {
  task -g services:start:n8n
}

function n8n-stop() {
  task -g services:stop:n8n
}

function n8n-restart() {
  task -g services:restart:n8n
}

function n8n-logs() {
  task -g services:logs:n8n -- "$@"
}

# Convenience functions for Twenty CRM
function twenty-start() {
  task -g services:start:twenty
}

function twenty-stop() {
  task -g services:stop:twenty
}

function twenty-restart() {
  task -g services:restart:twenty
}

function twenty-logs() {
  task -g services:logs:twenty -- "$@"
}

# Convenience functions for Plane
function plane-start() {
  task -g services:start:plane
}

function plane-stop() {
  task -g services:stop:plane
}

function plane-restart() {
  task -g services:restart:plane
}

function plane-logs() {
  task -g services:logs:plane -- "$@"
}