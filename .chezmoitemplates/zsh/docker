#/usr/bin/env zsh

# =====================
# | 1.0 |  Path/Vars  |
# =====================

# =====================
# | 1.1 |  Functions  |
# =====================
function docker-nuke() {
  echo "🚨 WARNING: This will stop and remove all non-essential Docker containers, volumes, and images 🚨"
  echo "Press Ctrl+C to abort or Enter to continue..."
  read

  echo "🛑 Stopping all non-essential containers..."
  docker ps -a --format '{{ "{{.Names}}" }}' | grep -v 'k8s\|buildkit' | xargs -r docker stop

  echo "🗑️ Removing all non-essential containers..."
  docker ps -a --format '{{ "{{.Names}}" }}' | grep -v 'k8s\|buildkit' | xargs -r docker rm

  echo "🧹 Removing all unused networks..."
  docker network prune -f

  echo "💾 Removing all volumes..."
  docker volume rm $(docker volume ls -q) 2>/dev/null || echo "No volumes to remove."

  echo "🖼️ Removing all images..."
  docker rmi $(docker images -q) -f 2>/dev/null || echo "No images to remove."

  echo "🧼 Performing system prune to clean up any remaining resources..."
  docker system prune -af --volumes

  echo "✅ Docker environment has been nuked! Only Kubernetes and BuilderKit related resources remain."
}

function docker-compose-up() {
  local compose_file="$1"
  
  if [[ -z "$compose_file" ]]; then
    echo "Error: No compose file provided"
    return 1
  fi
  
  if gum confirm "Run in detached mode?"; then
    echo "Running in detached mode..."
    docker compose -f "$compose_file" up -d
  else
    echo "Running in attached mode..."
    docker compose -f "$compose_file" up
  fi
}
# =====================
# | 1.2 |   Aliases   |
# =====================
alias dd="lazydocker"
alias dkrmi="docker_rm_image"
alias dkc="docker_storm_container"
alias dcu="docker compose up"
alias dcps="docker compose ps"
alias dcl="docker compose logs"
alias dcd="docker compose down"
alias dcn="docker-nuke"

# =====================
# | 1.3 | Keybindings |
# =====================
