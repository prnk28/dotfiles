#!/usr/bin/env zsh

# =====================
# | 1.0 |  Path/Vars  |
# =====================
export LG_CONFIG_FILE="{{ .chezmoi.homeDir }}/.config/lazygit/config.yml"

# =====================
# | 1.1 | Hishtory    |
# =====================
# Load hishtory integration first
[[ -f "{{ .chezmoi.homeDir }}/.hishtory/config.zsh" ]] && source "{{ .chezmoi.homeDir }}/.hishtory/config.zsh"

# Configure zsh-autosuggestions with hishtory strategy
ZSH_AUTOSUGGEST_STRATEGY=(hishtory history completion)
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#666666"
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
ZSH_AUTOSUGGEST_USE_ASYNC=true

# Custom autosuggest strategy for hishtory
_zsh_autosuggest_strategy_hishtory() {
    local prefix="$1"
    typeset -g suggestion

    if [[ -n "$prefix" ]]; then
        suggestion=$(hishtory query "$prefix" 2>/dev/null | \
                     awk 'NR==1 {$1=$2=$3=$4=""; sub(/^[[:space:]]+/, ""); print}')
    fi
}

# =====================
# | 1.2 |  Functions  |
# =====================

command -v zoxide &> /dev/null && eval "$(zoxide init zsh)"
command -v starship &> /dev/null && eval "$(starship init zsh)"

function today_format_date() {
    # Get year
    local year=$(date +%Y)
    # Get week number (01-53)
    local week=$(date +%V)
    # Get day of week (1-7 where Monday is 1)
    local day=$(date +%u)

    # Combine and echo
    echo "${year}.${week}.${day}"
}

function today() {
    if [[ -n "$1" ]]; then
        # If date provided, parse it
        date -j -f "%Y-%m-%d" "$1" "+%Y.%V.%u" 2>/dev/null || echo "Usage: today [YYYY-MM-DD]"
    else
        # Current date
        date "+%Y.%V.%u"
    fi
}

function q() {
  if [[ -n "$TMUX" ]]; then
    # Check if current tmux window is a popup
    if tmux display-message -p '#{window_popup_flag}' | grep -q 1; then
      tmux detach-client
    else
      exit
    fi
  else
    exit
  fi
}

function c() {
  if [[ -z $1 ]]; then
    clear
  else
    z "$1"
  fi
}

# =====================
# | 1.3 |   Aliases   |
# =====================
alias cm="chezmoi"
alias cmc="chezmoi cd"
alias cma="chezmoi add"
alias cme="chezmoi edit"
alias cm.="chezmoi apply"
alias !!="chezmoi apply && exec zsh && tmux source {{ .chezmoi.homeDir }}/.tmux.conf && clear"
alias tdy="today_format_date"
alias x="clear"
alias update="refresh-global && source {{ .chezmoi.homeDir }}/.zshrc && exec zsh && tmux source {{ .chezmoi.homeDir }}/.tmux.conf && chezmoi apply && clear"
alias change="cd $ENV_DIR && nvim"
alias vi="nvim"
alias vim="nvim"

# =====================
# | 1.4 | Keybindings |
# =====================
# Custom keybindings (overriding standard zsh bindings):
#   ^A - open github actions (github template) [overrides beginning-of-line]
#   ^E - edit files with fzf (github template) [overrides end-of-line]
#   ^K - launch claude in repo (claude template) [overrides kill-line]
#   ^R - hishtory TUI (hishtory/config.zsh, re-bound in dot_zshrc.tmpl)
#
# Additional custom keybindings:
#   ^B - devbox run script selector (devbox template)
#   ^G - lazygit/lazycommit (github template)
#   ^N - down-line-or-search (this template)
#   ^O - open repo with ghq (github template)
#   ^P - open github PRs (github template)
#   ^T - open github issues (github template)
#
# Preserved standard keybindings:
#   ^U - kill-whole-line
#   ^W - backward-kill-word
#
# History search keybindings:
bindkey '^[[A' history-search-backward  # Up arrow
bindkey '^[[B' history-search-forward   # Down arrow
bindkey '^N' down-line-or-search        # Ctrl+N






