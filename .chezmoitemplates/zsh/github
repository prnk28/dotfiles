#!/usr/bin/env zsh

# =====================
# | 1.0 |  Path/Vars  |
# =====================

# =====================
# | 1.1 |  Functions  |
# =====================
function ghg() {
  gum spin --title "Fetching $1..." -- ghq get $1
  gum spin --title "Adding $1..." -- zoxide add $GHQ_ROOT/github.com/$1
}

function ghgu() {
  for repo in $(ghq list | grep "^github.com/"); do
    gum spin --spinner dot --title "Fetching $repo..." -- ghq get -u $repo
    gum log --level info "[Fetched] $repo âœ…"
  done
}

function ghn() {
  ORG_NAME=$(gum choose --header "Select parent org:" "sonr-io" "prnk28" "go-sonr" "gpm-tools" "pkl-sh")
  REPO_NAME=$(gum input --header "Enter a name for your new repo")
  if [ -z "$REPO_NAME" ]; then
    gum log --level error "Please enter a valid name for the repo and organization."
    return 1
  fi
  gh repo create $ORG_NAME/$REPO_NAME --private
  ghg $ORG_NAME/$REPO_NAME
  cd {{ .chezmoi.homeDir }}/code/github.com/$ORG_NAME/$REPO_NAME
}

function gop() {
  local repo=$(basename $PWD)
  if [[ "$repo" == ".dotfiles" ]]; then
    local url="https://github.com/prnk28/.dotfiles"
    {{ if eq .chezmoi.os "darwin" -}}
    open "$url"
    {{ else -}}
    xdg-open "$url"
    {{ end -}}
  else
    local host=$(basename $(dirname $(dirname $PWD)))
    local org=$(basename $(dirname $PWD))
    local url="https://$host/$org/$repo"
    {{ if eq .chezmoi.os "darwin" -}}
    open "$url"
    {{ else -}}
    xdg-open "$url"
    {{ end -}}
  fi
}

function open_lazycommit() {
  /home/prad/.local/bin/gcai
  zle && zle reset-prompt # Force prompt redraw
}

function open_github-issues() {
  /home/prad/.local/bin/github issues
  zle && zle reset-prompt # Force prompt redraw
}

function open_github-prs() {
  /home/prad/.local/bin/github prs
  zle && zle reset-prompt # Force prompt redraw
}

function open_github-actions() {
  /home/prad/.local/bin/github actions
  zle && zle reset-prompt # Force prompt redraw
}

function open_repo() {
  clear
  gum style --align center --padding "0 1" --border double --foreground 215 --border-foreground 215 " Open Repository"
  local selected=$(ghq list | fzf --delimiter='/' --nth=-1 --height=92% --border=none)
  if [[ -n "$selected" ]]; then
    cd "$GHQ_ROOT/$selected"
    clear
  fi
  clear
  zle && zle reset-prompt # Force prompt redraw
  clear
}

# =====================
# | 1.2 |   Aliases   |
# =====================

alias gg="lazygit"
alias ghd="gh dash"
alias gpu="git push --set-upstream origin HEAD"
alias gsb="git switch -"
alias gdf="git diff"
alias gdc='gum confirm "Reset local changes" && git reset --hard HEAD'
alias ghl="ghq list"
alias ghrm="ghq rm"
alias gghh="ghq get -"
alias o=open_repo
alias gc=open_lazycommit
alias gha=open_github-actions
alias ghp=open_github-prs
alias ghi=open_github-issues

# =====================
# | 1.3 | Keybindings |
# =====================

function open_lazygit() {
  lazygit
  zle && zle reset-prompt # Force prompt redraw
}

zle -N open_lazygit-widget open_lazygit
bindkey '^G' open_lazygit-widget

zle -N open_github-issues-widget open_github-issues
bindkey '^N' open_github-issues-widget

zle -N open_github-prs-widget open_github-prs
bindkey '^P' open_github-prs-widget

zle -N open_github-actions-widget open_github-actions
bindkey '^A' open_github-actions-widget

zle -N open_repo-widget open_repo
bindkey '^O' open_repo-widget

function open_bhist() {
  /home/prad/.local/bin/bhist
  zle && zle reset-prompt # Force prompt redraw
}

zle -N open_bhist-widget open_bhist
bindkey '^H' open_bhist-widget
