{
  "permissions": {
    "additionalDirectories": [
      "~/.claude",
      "~/Developer/github.com/go-sonr",
      "~/Developer/github.com/sonr-io"
    ],
    "allow": [
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(chmod:*)",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(ln:*)",
      "Bash(mv:*)",
      "Bash(tree:*)",
      "Bash(pwd:*)",
      "Bash(which:*)",
      "Bash(diff:*)",
      "Bash(jq:*)",
      "Bash(timeout:*)",
      "Bash(open:*)",
      "Bash(git checkout:*)",
      "Bash(git fetch:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git diff:*)",
      "Bash(git restore:*)",
      "Bash(git stash:*)",
      "Bash(git rm:*)",
      "Bash(git mv:*)",
      "Bash(gh label:*)",
      "Bash(gh pr:*)",
      "Bash(gh issue:*)",
      "Bash(gh api:*)",
      "Bash(gh repo:*)",
      "Bash(gh milestone:*)",
      "Bash(go version:*)",
      "Bash(go get:*)",
      "Bash(go build:*)",
      "Bash(go mod:*)",
      "Bash(go test:*)",
      "Bash(go install:*)",
      "Bash(go fmt:*)",
      "Bash(go list:*)",
      "Bash(go doc:*)",
      "Bash(go run:*)",
      "Bash(go vet:*)",
      "Bash(go env:*)",
      "Bash(gofmt:*)",
      "Bash(goimports:*)",
      "Bash(golangci-lint:*)",
      "Bash(goreleaser:*)",
      "Bash(make:*)",
      "Bash(task:*)",
      "Bash(pushd:*)",
      "Bash(popd:*)",
      "Bash(docker:*)",
      "Bash(docker-compose:*)",
      "Bash(node:*)",
      "Bash(npm:*)",
      "Bash(bun:*)",
      "Bash(pnpm:*)",
      "Bash(forge:*)",
      "Bash(trunk:*)",
      "Bash(yamllint:*)",
      "Bash(zizmor:*)",
      "Bash(curl:*)",
      "Bash(./build/*:*)",
      "Bash(./bin/*:*)",
      "Bash(./scripts/*:*)",
      "Bash(snrd:*)",
      "Bash(/project:sessions:*)",
      "Bash(CGO_ENABLED=*)",
      "Bash(GOOS=*)",
      "Bash(TARGET_PLATFORMS=*)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(done)",
      "mcp__github__create_issue",
      "mcp__github__get_issue",
      "mcp__github__update_issue",
      "mcp__github__add_issue_comment",
      "mcp__github__search_issues",
      "mcp__github__list_issues",
      "mcp__github__create_branch",
      "mcp__github__list_branches",
      "mcp__github__create_pull_request",
      "mcp__github__update_pull_request",
      "mcp__github__list_notifications",
      "mcp__github__search_repositories",
      "mcp__github__list_tags",
      "mcp__github__get_commit",
      "mcp__github__list_commits",
      "mcp__github__get_me",
      "mcp__github__get_file_contents",
      "mcp__github__delete_file",
      "mcp__mcp-gopls__ListDocumentSymbols",
      "mcp__mcp-gopls__SearchSymbol",
      "mcp__mcp-gopls__GoToDefinition",
      "mcp__mcp-gopls__Hover",
      "mcp__mcp-gopls__GetDiagnostics",
      "mcp__mcp-gopls__getDiagnostics",
      "mcp__mcp-gopls__FindReferences",
      "mcp__cclsp__get_diagnostics",
      "mcp__godoc__get_doc",
      "mcp__exa__web_search_exa",
      "Edit(~/Developer/github.com/go-sonr/**)",
      "Read(~/Developer/github.com/go-sonr/**)",
      "Edit(~/Developer/github.com/sonr-io/**)",
      "Read(~/Developer/github.com/sonr-io/**)",
      "Grep(~/Developer/github.com/sonr-io/**)",
      "Grep(~/Developer/github.com/go-sonr/**)",
      "Glob(**)",
      "LS(**)",
      "WebSearch(**)",
      "WebFetch(domain:templ.guide)",
      "WebFetch(domain:pkl-lang.org)",
      "WebFetch(domain:www.w3.org)",
      "WebFetch(domain:fumadocs.dev)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "WebFetch(domain:www.rybbit.io)",
      "WebFetch(domain:mcaptcha.org)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:docs.uncloud.run)",
      "WebFetch(domain:golangci-lint.run)"
    ],
    "deny": [
      "Bash(su:*)",
      "Bash(sudo:*)",
      "Bash(passwd:*)",
      "Bash(env:*)",
      "Bash(printenv:*)",
      "Bash(history:*)",
      "Bash(rsync:*)",
      "Bash(scp:*)",
      "Bash(sftp:*)",
      "Bash(ssh:*)",
      "Bash(socat:*)",
      "Bash(nc:*)",
      "Bash(ncat:*)",
      "Bash(netcat:*)",
      "Bash(nmap:*)"
    ]
  },
  "env": {
    "DISABLE_BUG_COMMAND": "1",
    "DISABLE_ERROR_REPORTING": "1",
    "DISABLE_TELEMETRY": "1",
    "CLAUDE_BASH_MAINTAIN_PROJECT_WORKING_DIR": "1"
  }
}
