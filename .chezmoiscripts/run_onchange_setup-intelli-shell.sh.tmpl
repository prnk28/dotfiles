#!/usr/bin/env bash
# Setup intelli-shell with custom commands

set -e

# Only run if intelli-shell is installed
if ! command -v intelli-shell &> /dev/null; then
    echo "intelli-shell not found, skipping setup"
    exit 0
fi

echo "Setting up intelli-shell custom commands..."

# Function to add command if not already exists
add_command() {
    local cmd="$1"
    local alias="$2"
    local description="$3"

    # Add the command (intelli-shell handles duplicates)
    intelli-shell new "$cmd" --alias "$alias" --description "$description" 2>/dev/null || true
}

# Claude commands
add_command "claude -r --dangerously-skip-permissions" "claude" "Launch Claude Code in current repo with full permissions"
add_command "claude --dangerously-skip-permissions" "/c" "Launch Claude Code with full permissions (new session)"
add_command "claude --dangerously-skip-permissions --continue" "/cc" "Continue Claude Code session"
add_command "claude --dangerously-skip-permissions --resume" "/cr" "Resume Claude Code session"
add_command "opencode" "/o" "Open code in default editor"
add_command "rclone copy -P r2:claude .claude" "claude-init" "Initialize Claude data from R2 storage"
add_command "rclone sync -P .claude r2:claude" "claude-sync" "Sync Claude data to R2 storage"

# GitHub commands
add_command "github issues" "ghi" "Open GitHub issues selector with fzf"
add_command "github prs" "ghp" "Open GitHub PRs selector with fzf"
add_command "github actions" "gha" "Open GitHub Actions runs selector with fzf"

# Devbox command
add_command "devbox-run" "dxr" "Select and run a devbox script with fzf"

# TLDraw command
add_command "tdrw" "td" "Open TLDraw file selector with fzf"

# Chezmoi commands
add_command "chezmoi update" "cmu" "Update dotfiles from remote and apply changes"
add_command "chezmoi apply" "cm." "Apply dotfiles changes to system"
add_command "chezmoi edit" "cme" "Edit a dotfile in chezmoi source state"

# Filesystem commands
add_command "yy" "y" "Open Yazi file manager with automatic cd to selection"
add_command "cd ~/.local/share" "cdl" "Change to local share directory"
add_command "cd -" "cb" "Change to previous directory"
add_command "cd .." ".." "Go up one directory"
add_command "chezmoi cd" "cd." "Change to chezmoi source directory"

# Git/GitHub aliases
add_command "lazygit" "gg" "Launch lazygit TUI"
add_command "gh dash" "ghd" "Open GitHub dashboard"
add_command "git push --set-upstream origin HEAD" "gpu" "Push current branch and set upstream"
add_command "git switch -" "gsb" "Switch to previous git branch"
add_command "git diff" "gdf" "Show git diff"
add_command "ghq list" "ghl" "List all ghq repositories"
add_command "edit_files" "e" "Edit files in git repo with fzf selector"
add_command "open_repo" "o" "Open repository from ghq with fzf selector"
add_command "open_lazycommit" "gc" "Open lazycommit for AI-generated commit messages"

# Docker Compose services
add_command "task -g services:start:openwebui" "openwebui-start" "Start OpenWebUI service"
add_command "task -g services:stop:openwebui" "openwebui-stop" "Stop OpenWebUI service"
add_command "task -g services:restart:openwebui" "openwebui-restart" "Restart OpenWebUI service"
add_command "task -g services:start:flame" "flame-start" "Start Flame dashboard service"
add_command "task -g services:stop:flame" "flame-stop" "Stop Flame dashboard service"
add_command "task -g services:start:n8n" "n8n-start" "Start n8n workflow automation service"
add_command "task -g services:stop:n8n" "n8n-stop" "Stop n8n workflow automation service"

# SSH commands - generic
add_command "sshc" "sshc" "Run command on all SSH servers"
add_command "sshs" "sshs" "Select and connect to SSH server with fzf"
add_command "sshb" "sshb" "Run command on build servers"
add_command "ssht" "ssht" "Run command on testnet servers"
add_command "sshg" "sshg" "Run command on gateway servers"

# SSH commands - specific hosts
add_command "ssh bos-kvm-8" "ssh-bos8" "SSH to Boston KVM-8 server (72.60.121.60)"
add_command "ssh bos-kvm-4" "ssh-bos4" "SSH to Boston KVM-4 server (100.87.170.34)"
add_command "ssh phx-kvm-8" "ssh-phx8" "SSH to Phoenix KVM-8 server (193.203.164.150)"
add_command "ssh phx-kvm-2" "ssh-phx2" "SSH to Phoenix KVM-2 server (100.127.253.117)"
add_command "ssh gateway-bos" "ssh-gateway" "SSH to Boston Gateway server (100.65.108.79)"
add_command "ssh testnet-phx" "ssh-testnet" "SSH to Phoenix Testnet server (100.87.11.72)"

# Shell utilities
add_command "today" "tdy" "Get current date in YYYY.WW.D format"
add_command "q" "q" "Smart quit (detaches from tmux popup or exits)"
add_command "c" "c" "Clear screen or cd to directory with zoxide"

# System update
add_command "refresh-global && source ~/.zshrc && exec zsh" "reload" "Reload zsh configuration and refresh global environment"

# Omarchy CMD utilities
add_command "omarchy-cmd-apple-display-brightness" "o-brightness" "Adjust Apple display brightness"
add_command "omarchy-cmd-audio-switch" "o-audio" "Switch audio output device"
add_command "omarchy-cmd-close-all-windows" "o-close-all" "Close all windows"
add_command "omarchy-cmd-screenrecord" "o-record" "Start screen recording"
add_command "omarchy-cmd-screensaver" "o-saver" "Launch screensaver"
add_command "omarchy-cmd-screenshot" "o-screenshot" "Take screenshot"
add_command "omarchy-cmd-share" "o-share" "Share file/screen"
add_command "omarchy-cmd-terminal-cwd" "o-term-cwd" "Open terminal in current directory"
add_command "omarchy-cmd-tzupdate" "o-tz" "Update timezone"

# Omarchy install commands
add_command "omarchy-install-chromium-google-account" "o-chrome" "Install Chromium with Google account"
add_command "omarchy-install-dev-env" "o-dev" "Install development environment"
add_command "omarchy-install-docker-dbs" "o-docker-db" "Install Docker databases"
add_command "omarchy-install-dropbox" "o-dropbox" "Install Dropbox"
add_command "omarchy-install-steam" "o-steam" "Install Steam"
add_command "omarchy-install-tailscale" "o-tailscale" "Install Tailscale VPN"
add_command "omarchy-install-terminal" "o-terminal" "Install terminal emulator"

# Omarchy launch commands
add_command "omarchy-launch-about" "o-about" "Show Omarchy about screen"
add_command "omarchy-launch-browser" "o-browser" "Launch default browser"
add_command "omarchy-launch-editor" "o-editor" "Launch default editor"
add_command "omarchy-launch-tui-float" "o-tui-float" "Launch floating TUI terminal"
add_command "omarchy-launch-tui-tile" "o-tui-tile" "Launch tiled TUI terminal"
add_command "omarchy-launch-webapp" "o-webapp" "Launch web application"
add_command "omarchy-launch-wifi" "o-wifi" "Launch WiFi manager"
add_command "omarchy-lock-screen" "o-lock" "Lock screen"
add_command "omarchy-menu" "o-menu" "Open Omarchy menu"
add_command "omarchy-menu-keybindings" "o-keys" "Show keybindings menu"

# Omarchy package management
add_command "omarchy-pkg-install" "o-pkg-add" "Install package"
add_command "omarchy-pkg-remove" "o-pkg-rm" "Remove package"
add_command "omarchy-pkg-aur-install" "o-aur-add" "Install AUR package"
add_command "omarchy-pkg-missing" "o-pkg-missing" "List missing packages"
add_command "omarchy-pkg-present" "o-pkg-list" "List installed packages"

# Omarchy refresh/restart commands
add_command "omarchy-refresh-config" "o-refresh" "Refresh Omarchy configuration"
add_command "omarchy-refresh-waybar" "o-refresh-bar" "Refresh Waybar"
add_command "omarchy-restart-waybar" "o-restart-bar" "Restart Waybar"
add_command "omarchy-restart-bluetooth" "o-bt" "Restart Bluetooth"
add_command "omarchy-restart-pipewire" "o-audio-restart" "Restart Pipewire audio"
add_command "omarchy-restart-wifi" "o-wifi-restart" "Restart WiFi"

# Omarchy theme management
add_command "omarchy-theme-current" "o-theme" "Show current theme"
add_command "omarchy-theme-set" "o-theme-set" "Set theme"
add_command "omarchy-theme-next" "o-theme-next" "Switch to next theme"
add_command "omarchy-theme-list" "o-theme-ls" "List available themes"
add_command "omarchy-theme-bg-next" "o-bg-next" "Cycle to next background"

# Omarchy toggle commands
add_command "omarchy-toggle-idle" "o-idle" "Toggle idle inhibitor"
add_command "omarchy-toggle-nightlight" "o-night" "Toggle nightlight"
add_command "omarchy-toggle-screensaver" "o-saver-toggle" "Toggle screensaver"
add_command "omarchy-toggle-waybar" "o-bar" "Toggle Waybar visibility"

# Omarchy update commands
add_command "omarchy-update" "o-update" "Update Omarchy system"
add_command "omarchy-update-available" "o-update-check" "Check for updates"
add_command "omarchy-update-perform" "o-update-run" "Perform system update"
add_command "omarchy-update-system-pkgs" "o-sys-update" "Update system packages"

# Omarchy webapp commands
add_command "omarchy-webapp-install" "o-webapp-add" "Install web application"
add_command "omarchy-webapp-remove" "o-webapp-rm" "Remove web application"

# Omarchy utilities
add_command "omarchy-battery-monitor" "o-battery" "Monitor battery status"
add_command "omarchy-drive-select" "o-drive" "Select and manage drive"
add_command "omarchy-font-set" "o-font" "Set system font"
add_command "omarchy-font-list" "o-font-ls" "List available fonts"
add_command "omarchy-setup-fingerprint" "o-fingerprint" "Setup fingerprint authentication"
add_command "omarchy-snapshot" "o-snapshot" "Create system snapshot"
add_command "omarchy-state" "o-state" "Show Omarchy state"
add_command "omarchy-version" "o-version" "Show Omarchy version"

echo "âœ“ intelli-shell custom commands configured"
