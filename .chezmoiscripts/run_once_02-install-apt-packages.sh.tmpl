{{ if eq .chezmoi.os "linux" -}}
#!/bin/bash
set -euo pipefail

echo "Installing APT packages..."

packages=(
    # Essential build tools
    build-essential
    cmake
    pkg-config
    libssl-dev
    libffi-dev
    python3-dev
    
    # Version control
    git
    git-lfs
    gh
    
    # Editors
    neovim
    python3-neovim
    
    # Languages (we'll install Go and Rust separately)
    nodejs
    npm
    python3-pip
    ruby-full
    
    # Terminal tools
    tmux
    zsh
    curl
    wget
    jq
    ripgrep
    fd-find
    bat
    fzf
    htop
    ncdu
    tree
    
    # Network tools
    net-tools
    dnsutils
    
    # Archive tools
    zip
    unzip
    tar
    
    # System monitoring
    iotop
    sysstat
)

for package in "${packages[@]}"; do
    if ! dpkg -l | grep -q "^ii  $package "; then
        echo "Installing $package..."
        sudo apt install -y "$package"
    else
        echo "$package is already installed"
    fi
done

# Install lazygit from GitHub releases
echo ""
echo "Installing lazygit..."

# Check if lazygit is already installed
if command -v lazygit &> /dev/null; then
    INSTALLED_VERSION=$(lazygit --version | grep -oP 'version=\K[0-9.]+' || echo "0")
    echo "lazygit is already installed (version: $INSTALLED_VERSION)"
    
    # Get latest version
    LATEST_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": *"v\K[^"]*')
    
    if [ "$INSTALLED_VERSION" != "$LATEST_VERSION" ]; then
        echo "Updating lazygit from $INSTALLED_VERSION to $LATEST_VERSION..."
    else
        echo "lazygit is up to date"
        exit 0
    fi
else
    echo "lazygit not found, installing..."
fi

# Download and install lazygit
TEMP_DIR=$(mktemp -d)
trap "rm -rf $TEMP_DIR" EXIT

cd "$TEMP_DIR"

# Get the latest version
LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": *"v\K[^"]*')

if [ -z "$LAZYGIT_VERSION" ]; then
    echo "Failed to get lazygit version"
    exit 1
fi

echo "Downloading lazygit v${LAZYGIT_VERSION}..."

# Detect architecture
ARCH=$(uname -m)
case "$ARCH" in
    x86_64)
        LAZYGIT_ARCH="x86_64"
        ;;
    aarch64|arm64)
        LAZYGIT_ARCH="arm64"
        ;;
    armv7l)
        LAZYGIT_ARCH="armv6"
        ;;
    *)
        echo "Unsupported architecture: $ARCH"
        exit 1
        ;;
esac

# Download the appropriate version
curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/download/v${LAZYGIT_VERSION}/lazygit_${LAZYGIT_VERSION}_Linux_${LAZYGIT_ARCH}.tar.gz"

# Extract and install
tar xf lazygit.tar.gz lazygit
sudo install lazygit -D -t /usr/local/bin/

echo "âœ… lazygit v${LAZYGIT_VERSION} installed successfully!"

{{ end -}}
