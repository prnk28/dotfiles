# Dockerfile for Context7 MCP server proxy
# This creates an HTTP proxy to the Context7 MCP server with OpenAPI exposure

FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install Python packages
RUN pip install --no-cache-dir \
    fastapi \
    uvicorn \
    httpx \
    pydantic

# Environment variables
ENV MCP_PORT=8000
ENV MCP_HOST="0.0.0.0"
# Context7 configuration (will be overridden by docker-compose)
ENV CONTEXT7_API_KEY=""
ENV CONTEXT7_URL="https://mcp.context7.com/mcp"

# Create the proxy application
RUN cat > /app/proxy.py << 'EOF'
import os
from fastapi import FastAPI, Request, Response, HTTPException
from fastapi.responses import JSONResponse
import httpx
import json

app = FastAPI(title="Context7 MCP Proxy", version="1.0.0")

CONTEXT7_URL = os.getenv("CONTEXT7_URL", "https://mcp.context7.com/mcp")
CONTEXT7_API_KEY = os.getenv("CONTEXT7_API_KEY", "")

if not CONTEXT7_API_KEY:
    raise ValueError("CONTEXT7_API_KEY environment variable is required")

@app.get("/health")
async def health():
    return {"status": "healthy"}

@app.get("/docs")
async def docs_redirect():
    return {"message": "OpenAPI docs available at /docs"}

@app.post("/")
async def proxy_mcp(request: Request):
    """Proxy MCP requests to Context7"""
    try:
        body = await request.body()

        headers = {
            "CONTEXT7_API_KEY": CONTEXT7_API_KEY,
            "Content-Type": "application/json"
        }

        async with httpx.AsyncClient() as client:
            response = await client.post(
                CONTEXT7_URL,
                content=body,
                headers=headers,
                timeout=30.0
            )

            return Response(
                content=response.content,
                status_code=response.status_code,
                headers=dict(response.headers)
            )
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))

@app.get("/")
async def root():
    return {
        "service": "Context7 MCP Proxy",
        "status": "ready",
        "endpoint": CONTEXT7_URL
    }
EOF

# Create startup script
RUN cat > /app/start.sh << 'EOF'
#!/bin/bash
set -e

if [ -z "$CONTEXT7_API_KEY" ]; then
    echo "Error: CONTEXT7_API_KEY is required for Context7 MCP server"
    exit 1
fi

echo "Starting Context7 MCP server proxy..."
echo "Proxying to: $CONTEXT7_URL"
echo "Server will be available at http://$MCP_HOST:$MCP_PORT"

# Run the FastAPI proxy server
exec uvicorn proxy:app --host $MCP_HOST --port $MCP_PORT --log-level info
EOF

RUN chmod +x /app/start.sh

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:$MCP_PORT/health || exit 1

# Expose port
EXPOSE 8000

# Run the startup script
CMD ["/app/start.sh"]