services:
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    ports:
      - "3000:8080" # Host:Container
    volumes:
      - open-webui:/app/backend/data
    environment:
      - DATABASE_URL=${OPENWEBUI_DATABASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    networks:
      - webui-network

  # MCP Proxy Server - ref-tools (default)
  mcpo-ref:
    build:
      context: .
      dockerfile: Dockerfile
      target: ref
    container_name: mcpo-ref
    ports:
      - "8001:8000" # Host:Container - ref-tools MCP proxy on port 8001
    environment:
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8000
    restart: unless-stopped
    networks:
      - webui-network

  # MCP Proxy Server - GitHub
  # Note: Requires GITHUB_PERSONAL_ACCESS_TOKEN to be set
  mcpo-github:
    build:
      context: .
      dockerfile: Dockerfile
      target: github
    container_name: mcpo-github
    ports:
      - "8002:8000" # Host:Container - GitHub MCP proxy on port 8002
    environment:
      - GITHUB_PERSONAL_ACCESS_TOKEN=${GITHUB_PERSONAL_ACCESS_TOKEN}
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8000
    volumes:
      # Mount Docker socket to allow running GitHub MCP server container
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - webui-network

  # MCP Proxy Server - Filesystem
  mcpo-filesystem:
    build:
      context: .
      dockerfile: Dockerfile
      target: filesystem
    container_name: mcpo-filesystem
    ports:
      - "8003:8000" # Host:Container - Filesystem MCP proxy on port 8003
    environment:
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8000
      # Paths inside container (mapped via volumes)
      - FILESYSTEM_DIRS=/data/sonr /data/ui /data/notes
    volumes:
      # Map host directories to container paths
      - /home/prad/code/github.com/sonr-io/sonr:/data/sonr:ro
      - /home/prad/code/github.com/go-sonr/ui:/data/ui:ro
      - /home/prad/Notes:/data/notes:ro
    restart: unless-stopped
    networks:
      - webui-network

  # MCP Proxy Server - Obsidian
  mcpo-obsidian:
    build:
      context: .
      dockerfile: Dockerfile
      target: obsidian
    container_name: mcpo-obsidian
    ports:
      - "8004:8000" # Host:Container - Obsidian MCP proxy on port 8004
    environment:
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8000
      # Obsidian configuration (using existing env vars)
      - OBSIDIAN_API_KEY=${OBSIDIAN_API_KEY}
      - OBSIDIAN_HOST=${OBSIDIAN_HOST}
      - OBSIDIAN_PORT=${OBSIDIAN_PORT}
    restart: unless-stopped
    networks:
      - webui-network

  # MCP Proxy Server - Context7
  mcpo-context7:
    build:
      context: .
      dockerfile: Dockerfile
      target: context7
    container_name: mcpo-context7
    ports:
      - "8005:8000" # Host:Container - Context7 MCP proxy on port 8005
    environment:
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8000
      # Context7 configuration (using existing env var)
      - CONTEXT7_API_KEY=${CONTEXT7_API_KEY}
      - CONTEXT7_URL=https://mcp.context7.com/mcp
    restart: unless-stopped
    networks:
      - webui-network

  # MCP Proxy Server - Sequential Thinking
  mcpo-sequentialthinking:
    build:
      context: .
      dockerfile: Dockerfile
      target: sequentialthinking
    container_name: mcpo-sequentialthinking
    ports:
      - "8006:8000" # Host:Container - Sequential Thinking MCP proxy on port 8006
    environment:
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8000
      # Optional: Set to "true" to disable thought logging
      - DISABLE_THOUGHT_LOGGING=false
    restart: unless-stopped
    networks:
      - webui-network

networks:
  webui-network:
    driver: bridge

volumes:
  open-webui:
    driver: local
