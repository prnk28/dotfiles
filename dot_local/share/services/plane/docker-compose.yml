services:
  plane-web:
    image: makeplane/plane-frontend:stable
    container_name: plane-web
    restart: unless-stopped
    command: /usr/local/bin/start.sh web/server.js web
    environment:
      - NEXT_PUBLIC_ENABLE_OAUTH=${NEXT_PUBLIC_ENABLE_OAUTH:-0}
      - NEXT_PUBLIC_DEPLOY_URL=${NEXT_PUBLIC_DEPLOY_URL:-http://localhost:8082}
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL:-http://localhost:8082}
    depends_on:
      - plane-api
      - plane-worker
    networks:
      - plane-network

  plane-space:
    image: makeplane/plane-space:stable
    container_name: plane-space
    restart: unless-stopped
    command: /usr/local/bin/start.sh space/server.js space
    environment:
      - NEXT_PUBLIC_ENABLE_OAUTH=${NEXT_PUBLIC_ENABLE_OAUTH:-0}
      - NEXT_PUBLIC_DEPLOY_URL=${NEXT_PUBLIC_DEPLOY_URL:-http://localhost:8082}
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL:-http://localhost:8082}
    depends_on:
      - plane-api
      - plane-worker
      - plane-web
    networks:
      - plane-network

  plane-admin:
    image: makeplane/plane-admin:stable
    container_name: plane-admin
    restart: unless-stopped
    command: /usr/local/bin/start.sh admin/server.js admin
    environment:
      - NEXT_PUBLIC_ENABLE_OAUTH=${NEXT_PUBLIC_ENABLE_OAUTH:-0}
      - NEXT_PUBLIC_DEPLOY_URL=${NEXT_PUBLIC_DEPLOY_URL:-http://localhost:8082}
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL:-http://localhost:8082}
    depends_on:
      - plane-api
      - plane-worker
      - plane-web
    networks:
      - plane-network

  plane-api:
    image: makeplane/plane-backend:stable
    container_name: plane-api
    restart: unless-stopped
    command: ./bin/startserver
    environment:
      # Core Configuration
      - DEBUG=${DEBUG:-0}
      - SENTRY_DSN=${SENTRY_DSN:-""}
      - SENTRY_ENVIRONMENT=${SENTRY_ENVIRONMENT:-"production"}
      - WEB_URL=${WEB_URL:-http://localhost}

      # Security
      - SECRET_KEY=${SECRET_KEY:-60gp0byfz2dvffa45cxl20p1scy9xbpf6d8c5y0geejgkyp1b5}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:8082}

      # Database
      - DATABASE_URL=${DATABASE_URL:-postgresql://plane:plane@plane-db:5432/plane}

      # Redis
      - REDIS_URL=${REDIS_URL:-redis://plane-redis:6379}

      # Email/SMTP (Optional)
      - EMAIL_HOST=${EMAIL_HOST:-""}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-""}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:-""}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_FROM=${EMAIL_FROM:-"Team Plane <team@mailer.plane.so>"}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS:-1}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL:-0}

      # AWS/Storage (Optional)
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-""}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-""}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME:-""}
      - AWS_REGION=${AWS_REGION:-""}
      - AWS_S3_ENDPOINT_URL=${AWS_S3_ENDPOINT_URL:-""}

      # File Size Limits
      - FILE_SIZE_LIMIT=${FILE_SIZE_LIMIT:-5242880}

      # AI/OpenAI Integration (Optional)
      - OPENAI_API_KEY=${OPENAI_API_KEY:-""}
      - GPT_ENGINE=${GPT_ENGINE:-"gpt-3.5-turbo"}

      # OAuth (Optional)
      - ENABLE_SIGNUP=${ENABLE_SIGNUP:-1}
      - ENABLE_EMAIL_PASSWORD=${ENABLE_EMAIL_PASSWORD:-1}
      - ENABLE_MAGIC_LINK_LOGIN=${ENABLE_MAGIC_LINK_LOGIN:-0}
    depends_on:
      - plane-db
      - plane-redis
    volumes:
      - ./uploads:/code/uploads
    networks:
      - plane-network

  plane-worker:
    image: makeplane/plane-backend:stable
    container_name: plane-worker
    restart: unless-stopped
    command: ./bin/worker
    environment:
      # Core Configuration
      - DEBUG=${DEBUG:-0}
      - SENTRY_DSN=${SENTRY_DSN:-""}
      - SENTRY_ENVIRONMENT=${SENTRY_ENVIRONMENT:-"production"}
      - WEB_URL=${WEB_URL:-http://localhost}

      # Security
      - SECRET_KEY=${SECRET_KEY:-60gp0byfz2dvffa45cxl20p1scy9xbpf6d8c5y0geejgkyp1b5}

      # Database
      - DATABASE_URL=${DATABASE_URL:-postgresql://plane:plane@plane-db:5432/plane}

      # Redis
      - REDIS_URL=${REDIS_URL:-redis://plane-redis:6379}

      # Email/SMTP (Optional)
      - EMAIL_HOST=${EMAIL_HOST:-""}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-""}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:-""}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_FROM=${EMAIL_FROM:-"Team Plane <team@mailer.plane.so>"}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS:-1}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL:-0}

      # AWS/Storage (Optional)
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-""}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-""}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME:-""}
      - AWS_REGION=${AWS_REGION:-""}
      - AWS_S3_ENDPOINT_URL=${AWS_S3_ENDPOINT_URL:-""}

      # File Size Limits
      - FILE_SIZE_LIMIT=${FILE_SIZE_LIMIT:-5242880}

      # AI/OpenAI Integration (Optional)
      - OPENAI_API_KEY=${OPENAI_API_KEY:-""}
      - GPT_ENGINE=${GPT_ENGINE:-"gpt-3.5-turbo"}
    depends_on:
      - plane-db
      - plane-redis
      - plane-api
    volumes:
      - ./uploads:/code/uploads
    networks:
      - plane-network

  plane-beat-worker:
    image: makeplane/plane-backend:stable
    container_name: plane-beat-worker
    restart: unless-stopped
    command: ./bin/beatserver
    environment:
      # Core Configuration
      - DEBUG=${DEBUG:-0}
      - SENTRY_DSN=${SENTRY_DSN:-""}
      - SENTRY_ENVIRONMENT=${SENTRY_ENVIRONMENT:-"production"}
      - WEB_URL=${WEB_URL:-http://localhost}

      # Security
      - SECRET_KEY=${SECRET_KEY:-60gp0byfz2dvffa45cxl20p1scy9xbpf6d8c5y0geejgkyp1b5}

      # Database
      - DATABASE_URL=${DATABASE_URL:-postgresql://plane:plane@plane-db:5432/plane}

      # Redis
      - REDIS_URL=${REDIS_URL:-redis://plane-redis:6379}

      # Email/SMTP (Optional)
      - EMAIL_HOST=${EMAIL_HOST:-""}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-""}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:-""}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_FROM=${EMAIL_FROM:-"Team Plane <team@mailer.plane.so>"}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS:-1}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL:-0}

      # AWS/Storage (Optional)
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-""}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-""}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME:-""}
      - AWS_REGION=${AWS_REGION:-""}
      - AWS_S3_ENDPOINT_URL=${AWS_S3_ENDPOINT_URL:-""}

      # File Size Limits
      - FILE_SIZE_LIMIT=${FILE_SIZE_LIMIT:-5242880}

      # AI/OpenAI Integration (Optional)
      - OPENAI_API_KEY=${OPENAI_API_KEY:-""}
      - GPT_ENGINE=${GPT_ENGINE:-"gpt-3.5-turbo"}
    depends_on:
      - plane-db
      - plane-redis
      - plane-api
    volumes:
      - ./uploads:/code/uploads
    networks:
      - plane-network

  plane-db:
    image: postgres:15-alpine
    container_name: plane-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-plane}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-plane}
      - POSTGRES_DB=${POSTGRES_DB:-plane}
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - plane-network

  plane-redis:
    image: redis:7-alpine
    container_name: plane-redis
    restart: unless-stopped
    volumes:
      - ./redisdata:/data
    networks:
      - plane-network

  plane-proxy:
    image: makeplane/plane-proxy:stable
    container_name: plane-proxy
    restart: unless-stopped
    ports:
      - "${PLANE_PORT:-8082}:80"
    environment:
      - BUCKET_NAME=${BUCKET_NAME:-uploads}
      - FILE_SIZE_LIMIT=${FILE_SIZE_LIMIT:-5242880}
    depends_on:
      - plane-web
      - plane-api
      - plane-space
      - plane-admin
    networks:
      - plane-network

networks:
  plane-network:
    driver: bridge

volumes:
  pgdata:
    driver: local
  redisdata:
    driver: local
  uploads:
    driver: local