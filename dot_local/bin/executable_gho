#!/bin/bash

# gho - Interactive Git Repository Navigator with fzf
# Usage: source gho (to change directory in current shell)
#        or add as function to your shell config
# Options: -e, --edit              Open selected repository in nvim
#          -E, --edit-persistent   Open repository in nvim, show picker again after nvim exits
#          -c, --claude            Open selected repository in Claude Code
#          -C, --claude-persistent Open repository in Claude Code, show picker again after exit

gho() {
    local edit_mode=false
    local claude_mode=false
    local persistent_mode=false
    local selected_repo

    # Parse command line arguments
    while [[ $# -gt 0 ]]; do
        case $1 in
        -e | --edit)
            edit_mode=true
            shift
            ;;
        -E | --edit-persistent)
            edit_mode=true
            persistent_mode=true
            shift
            ;;
        -c | --claude)
            claude_mode=true
            shift
            ;;
        -C | --claude-persistent)
            claude_mode=true
            persistent_mode=true
            shift
            ;;
        *)
            echo "Unknown option: $1"
            echo "Usage: gho [-e|--edit] [-E|--edit-persistent] [-c|--claude] [-C|--claude-persistent]"
            echo "  -e, --edit                Open selected repository in nvim"
            echo "  -E, --edit-persistent     Open repository in nvim, show picker again after nvim exits"
            echo "  -c, --claude              Open selected repository in Claude Code"
            echo "  -C, --claude-persistent   Open repository in Claude Code, show picker again after exit"
            return 1
            ;;
        esac
    done

    # Main loop for persistent mode
    while true; do
        # Use fzf to select repository with git log preview
        local header_text="Select Repository"
        if [ "$edit_mode" = true ]; then
            header_text="$header_text (will open in nvim)"
        elif [ "$claude_mode" = true ]; then
            header_text="$header_text (will open in Claude Code)"
        fi
        if [ "$persistent_mode" = true ]; then
            header_text="$header_text [Persistent Mode - Ctrl+C to exit]"
        fi
        
        selected_repo=$( (echo ".local/share/chezmoi" && ghq list) | fzf \
            --header "$header_text" \
            --preview "if [[ '{}' == '.local/share/chezmoi' ]]; then cd \$HOME/.local/share/chezmoi; else cd \$(ghq root)/{}; fi && echo -e '\033[1;34mRecent commits:\033[0m' && git log --graph --pretty=format:'%C(yellow)%h%C(reset) - %C(blue)%an%C(reset), %C(green)%ar%C(reset) : %s' --abbrev-commit -8 && echo -e '\n\n\033[1;32mBranch info:\033[0m' && git branch -v 2>/dev/null || echo 'No git repository'" \
            --preview-window="right:60%" \
            --border \
            --height="80%")

        # If no repository was selected (user cancelled), exit
        if [[ -z "$selected_repo" ]]; then
            if [ "$persistent_mode" = true ]; then
                echo "üëã Exiting persistent mode..."
            fi
            break
        fi

        # If a repository was selected, cd into it
        if [[ "$selected_repo" == ".local/share/chezmoi" ]]; then
            local repo_path="$HOME/.local/share/chezmoi"
        else
            local repo_path="$(ghq root)/$selected_repo"
        fi
        if [[ -d "$repo_path" ]]; then
            cd "$repo_path" || return 1
            echo "üìÅ Changed to: $repo_path"
            # Show current branch and recent commit
            if git rev-parse --git-dir >/dev/null 2>&1; then
                echo "üåü Current branch: $(git branch --show-current)"
                echo "üìù Latest commit: $(git log -1 --oneline)"
            fi

            # Open in editor if edit or claude mode is enabled
            if [ "$edit_mode" = true ]; then
                echo "üöÄ Opening in nvim..."
                nvim .

                # If not in persistent mode, exit after nvim
                if [ "$persistent_mode" = false ]; then
                    break
                else
                    echo ""
                    echo "üîÑ nvim closed, showing repository picker again..."
                    echo "   Press Ctrl+C or ESC in fzf to exit persistent mode"
                    echo ""
                fi
            elif [ "$claude_mode" = true ]; then
                echo "ü§ñ Opening in Claude Code..."
                claude .

                # If not in persistent mode, exit after claude
                if [ "$persistent_mode" = false ]; then
                    break
                else
                    echo ""
                    echo "üîÑ Claude Code closed, showing repository picker again..."
                    echo "   Press Ctrl+C or ESC in fzf to exit persistent mode"
                    echo ""
                fi
            else
                # If not in edit or claude mode, just exit after cd
                break
            fi
        else
            echo "‚ùå Directory not found: $repo_path"
            if [ "$persistent_mode" = false ]; then
                return 1
            fi
        fi
    done
}

# If script is sourced, just define the function
# If script is executed directly, run the function
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    # Script is being executed directly
    echo "‚ö†Ô∏è  Note: To change directory in your current shell, you need to source this script:"
    echo "   source $0"
    echo "   or add the gho function to your shell config"
    echo ""
    echo "Running in subshell (directory change won't persist)..."
    gho
fi
